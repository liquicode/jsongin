!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.jsongin=t():e.jsongin=t()}("undefined"!=typeof self?self:this,(()=>(()=>{"use strict";var e={863:e=>{e.exports=function(e){return{Engine:e,OperatorType:"Array",TopLevel:!1,ValueTypes:"o",Query:function(e,t,n=""){let r=this.Engine.GetValue(e,n),o=this.Engine.ShortType(r);if("a"!==o&&(r=[r]),"a"!==o)return this.Engine.Settings.Explain&&this.Engine.Explain.push(`$all: document requires an array but found type [${o}] instead at [${n}].`),!1;let i=this.Engine.ShortType(t);if("a"!==i)return this.Engine.Settings.Explain&&this.Engine.Explain.push(`$all: match requires an array but found type [${i}] instead at [${n}].`),!1;for(let o=0;o<t.length;o++){let u=!1,l=this.Engine.ShortType(t[o]);if("bnsl".includes(l)?u=r.includes(t[o]):"o"===l?u=this.Engine.Query(e,t[o],n):this.Engine.Settings.Explain&&this.Engine.Explain.push(`$all: sub-match requires "bnslo" but found type [${i}] instead at [${n}].`),!1===u)return!1}return!0},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},999:e=>{e.exports=function(e){return{Engine:e,OperatorType:"Array",TopLevel:!1,ValueTypes:"o",Query:function(e,t,n=""){let r=this.Engine.GetValue(e,n),o=this.Engine.ShortType(r);if("a"!==o)return this.Engine.Settings.Explain&&this.Engine.Explain.push(`$elemMatch: document requires an array but found type [${o}] instead at [${n}].`),!1;let i=this.Engine.ShortType(t);if("o"!==i)return this.Engine.Settings.Explain&&this.Engine.Explain.push(`$elemMatch: match requires an object but found type [${i}] instead at [${n}].`),!1;for(let o=0;o<r.length;o++){let r=this.Engine.JoinPaths(n,o);if(!0===this.Engine.Query(e,t,r))return!0}return!1},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},950:e=>{e.exports=function(e){return{Engine:e,OperatorType:"Array",TopLevel:!1,ValueTypes:"n",Query:function(e,t,n=""){let r=this.Engine.GetValue(e,n),o=this.Engine.ShortType(r);if("a"!==o)return this.Engine.Settings.Explain&&this.Engine.Explain.push(`$size: requires an array but found type [${o}] instead at [${n}].`),!1;let i=this.Engine.ShortType(t);return"n"!==i?(this.Engine.Settings.Explain&&this.Engine.Explain.push(`$size: requires a number but found type [${i}] instead at [${n}].`),!1):r.length===t},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},374:e=>{e.exports=function(e){return{Engine:e,OperatorType:"Comparison",TopLevel:!1,ValueTypes:"bnsloaru",Query:function(t,n,r=""){let o=e.Flatten(t),i=Object.keys(o),u=e.Flatten(n),l=Object.keys(u);if(l.length!==i.length)return!1;for(let e=0;e<l.length;e++){let t=l[e];if(i[e]!==t)return!1;if(!1==(u[t]===o[t]))return!1}return!0},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},132:e=>{e.exports=function(e){return{Engine:e,OperatorType:"Comparison",TopLevel:!1,ValueTypes:"bns",Query:function(e,t,n=""){let r=this.Engine.GetValue(e,n),o=this.Engine.ShortType(r),i=t,u=this.Engine.ShortType(i);if("bns".includes(u)&&u===o)return r>i;if("a".includes(o)){let e=!1;for(let t=0;t<r.length;t++)if(e=r[t]>i,!0===e)return!0;return!1}return this.Engine.Settings.Explain&&this.Engine.Explain.push(`$gt: cannot compare [${u}] type with [${o}] type at [${n}].`),!1},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},588:e=>{e.exports=function(e){return{Engine:e,OperatorType:"Comparison",TopLevel:!1,ValueTypes:"bnslu",Query:function(e,t,n=""){let r=this.Engine.GetValue(e,n),o=this.Engine.ShortType(r),i=t,u=this.Engine.ShortType(i);if("bns".includes(u)&&u===o)return r>=i;if("lu".includes(u)&&"lu".includes(o))return!0;if("a".includes(o)){let e=!1;for(let t=0;t<r.length;t++)if(e=r[t]>=i,!0===e)return!0;return!1}return this.Engine.Settings.Explain&&this.Engine.Explain.push(`$gte: cannot compare [${u}] type with [${o}] type at [${n}].`),!1},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},38:e=>{e.exports=function(e){return{Engine:e,OperatorType:"Comparison",TopLevel:!1,ValueTypes:"a",Query:function(e,t,n=""){let r=this.Engine.GetValue(e,n),o=this.Engine.ShortType(r),i=t,u=this.Engine.ShortType(i);if("a"!==u)return this.Engine.Settings.Explain&&this.Engine.Explain.push(`$in: expected an array but found a type [${u}] instead at [${n}].`),!1;function l(e,t,n){if("r"===e.ShortType(n)){for(let e=0;e<t.length;e++)if(n.test(t[e]))return!0}else if(t.includes(n))return!0;return!1}if("a"===o){for(let e=0;e<i.length;e++)if(l(this.Engine,r,i[e]))return!0}else if("bnslou".includes(o)&&l(this.Engine,i,r))return!0;return this.Engine.Settings.Explain&&this.Engine.Explain.push(`$in: cannot compare [${u}] type with [${o}] type at [${n}].`),!1},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},207:e=>{e.exports=function(e){return{Engine:e,OperatorType:"Comparison",TopLevel:!1,ValueTypes:"bns",Query:function(e,t,n=""){let r=this.Engine.GetValue(e,n),o=this.Engine.ShortType(r),i=t,u=this.Engine.ShortType(i);if("bns".includes(u)&&u===o)return r<i;if("a".includes(o)){let e=!1;for(let t=0;t<r.length;t++)if(e=r[t]<i,!0===e)return!0;return!1}return this.Engine.Settings.Explain&&this.Engine.Explain.push(`$lt: cannot compare [${u}] type with [${o}] type at [${n}].`),!1},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},424:e=>{e.exports=function(e){return{Engine:e,OperatorType:"Comparison",TopLevel:!1,ValueTypes:"bnslu",Query:function(t,n,r=""){let o=e.GetValue(t,r),i=e.ShortType(o),u=n,l=e.ShortType(u);if("bns".includes(l)&&l===i)return o<=u;if("lu".includes(l)&&"lu".includes(i))return!0;if("a".includes(i)){let e=!1;for(let t=0;t<o.length;t++)if(e=o[t]<=u,!0===e)return!0;return!1}return e.Settings.Explain&&e.Explain.push(`$lte: cannot compare [${l}] type with [${i}] type at [${r}].`),!1},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},490:e=>{e.exports=function(e){return{Engine:e,OperatorType:"Comparison",TopLevel:!1,ValueTypes:"bnsloau",Query:function(e,t,n=""){return!this.Engine.QueryOperators.$eq.Query(e,t,n)},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},879:e=>{e.exports=function(e){return{Engine:e,OperatorType:"Comparison",TopLevel:!1,ValueTypes:"a",Query:function(e,t,n=""){return!this.Engine.QueryOperators.$in.Query(e,t,n)},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},611:e=>{e.exports=function(e){return{Engine:e,OperatorType:"Meta",TopLevel:!1,ValueTypes:"b",Query:function(e,t,n=""){let r=this.Engine.GetValue(e,n),o=this.Engine.ShortType(r),i=this.Engine.ShortType(t);if("b"!==i)return this.Engine.Settings.Explain&&this.Engine.Explain.push(`$exists: requires a boolean but found type [${i}] instead at [${n}].`),!1;if(!0===t){if("u"!==o)return!0}else if("u"===o)return!0;return!1},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},718:e=>{e.exports=function(e){return{Engine:e,OperatorType:"Meta",TopLevel:!1,ValueTypes:"b",Query:function(e,t,n=""){return this.Engine.Settings.Explain&&this.Engine.Explain.push(`$noop: always returns true at [${n}].`),!0},ToMongoQuery:function(e){},ToSql:function(e){return""}}}},222:e=>{e.exports=function(e){return{Engine:e,OperatorType:"Meta",TopLevel:!1,ValueTypes:"b",Query:function(e,t,n=""){return!0},ToMongoQuery:function(e){},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},475:e=>{e.exports=function(e){return{Engine:e,OperatorType:"Meta",TopLevel:!1,ValueTypes:"nsa",Query:function(e,t,n=""){let r=this.Engine.GetValue(e,n);"a"!==this.Engine.ShortType(r)&&(r=[r]);let o=this.Engine.ShortType(t);"a"!==o&&(t=[t]);for(let e=0;e<t.length;e++){let i=t[e];if(o=this.Engine.ShortType(i),"n"===o){for(let e=0;e<r.length;e++)if(i===this.Engine.BsonType(r[e],!1))return!0}else{if("s"!==o)return this.Engine.Settings.Explain&&this.Engine.Explain.push(`$type: requires a number or string but found type [${o}] instead at [${n}].`),!1;for(let e=0;e<r.length;e++){let t=this.Engine.BsonType(r[e],!0);if(i===t)return!0;if("number"===i&&["int","long","double","decimal"].includes(t))return!0}}}return!1},ToMongoQuery:function(e){},ToSql:function(e){return""}}}},940:e=>{e.exports=function(e){return{Engine:e,OperatorType:"Comparison",TopLevel:!1,ValueTypes:"sr",Query:function(e,t,n=""){let r=this.Engine.GetValue(e,n),o=(this.Engine.ShortType(r),t),i=this.Engine.ShortType(o);return"sr".includes(i)?("s"===i&&(o=new RegExp(o)),o.test(r)):(this.Engine.Settings.Explain&&this.Engine.Explain.push(`$regex: requires regexp or string but found [${i}] instead at [${n}].`),!1)},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},469:e=>{e.exports=function(e){return{Engine:e,OperatorType:"Comparison",TopLevel:!1,ValueTypes:"bnsloaru",Query:function(e,t,n=""){let r=this.Engine.GetValue(e,n),o=this.Engine.ShortType(r),i=t,u=this.Engine.ShortType(i),l=this.Engine.IsQuery(i),p=!1;if("bnslu".includes(o)&&"bnslu".includes(u))return p=this.Engine.QueryOperators.$eq.Query(e,i,n),p;if("bnslu".includes(o)&&"a".includes(u))return this.Engine.Settings.Explain&&this.Engine.Explain.push(`ImplicitEq: cannot compare [${u}] type with [${o}] type at [${n}].`),!1;if("bnslu".includes(o)&&"o".includes(u))return l?(p=this.Engine.Query(e,i,n),p):(this.Engine.Settings.Explain&&this.Engine.Explain.push(`ImplicitEq: requires query when comparing against [${o}] type with [${o}] type at [${n}].`),!1);if("a".includes(o)&&"bnslu".includes(u))return p=r.includes(i),p;if("a".includes(o)&&"o".includes(u)){for(let t=0;t<r.length;t++){let r=this.Engine.JoinPaths(n,t);if(p=l?this.Engine.Query(e,i,r):this.Engine.QueryOperators.$eq.Query(e,i,r),!0===p)return!0}return!1}if("a".includes(o)&&"a".includes(u))return p=this.Engine.QueryOperators.$eq.Query(e,i,n),p;if("a".includes(o)&&"r".includes(u)){for(let t=0;t<r.length;t++){let r=this.Engine.JoinPaths(n,t);if(p=this.Engine.QueryOperators.$regex.Query(e,i,r),!1===p)return!1}return!0}return"o".includes(o)&&"o".includes(u)?l?(p=this.Engine.Query(e,i,n),p):(p=this.Engine.QueryOperators.$eq.Query(e,i,n),p):"s".includes(o)&&"r".includes(u)?(p=this.Engine.QueryOperators.$regex.Query(e,i,n),p):(this.Engine.Settings.Explain&&this.Engine.Explain.push(`ImplicitEq: cannot compare [${u}] type with [${o}] type at [${n}].`),!1)},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},239:e=>{e.exports=e.exports=function(e){return{Engine:e,OperatorType:"Comparison",TopLevel:!1,ValueTypes:"bnsloaru",Query:function(t,n,r=""){let o=e.Flatten(t),i=Object.keys(o),u=e.Flatten(n),l=Object.keys(u);if(l.length!==i.length)return!1;for(let e=0;e<l.length;e++){let t=l[e];if(!1==(u[t]==o[t]))return!1}return!0},ToMongoQuery:function(e){throw new Error("ToMongoQuery() is not implemented.")},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},105:e=>{e.exports=function(e){return{Engine:e,OperatorType:"Comparison",TopLevel:!1,ValueTypes:"bnsloau",Query:function(e,t,n=""){return!this.Engine.QueryOperators.$eqx.Query(e,t,n)},ToMongoQuery:function(e){throw new Error("ToMongoQuery() is not implemented.")},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},209:e=>{e.exports=function(e){return{Engine:e,OperatorType:"Logical",TopLevel:!0,ValueTypes:"a",Query:function(e,t,n){let r=this.Engine.ShortType(t);if("a"!==r)return this.Engine.Settings.Explain&&this.Engine.Explain.push(`$and: requires an array but found type [${r}] instead at [${n}].`),!1;for(let r=0;r<t.length;r++)if(!1===this.Engine.Query(e,t[r],n))return!1;return!0},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},809:e=>{e.exports=function(e){return{Engine:e,OperatorType:"Logical",TopLevel:!0,ValueTypes:"a",Query:function(e,t,n=""){let r=this.Engine.ShortType(t);if("a"!==r)return this.Engine.Settings.Explain&&this.Engine.Explain.push(`$nor: requires an array but found type [${r}] instead at [${n}].`),!1;for(let r=0;r<t.length;r++)if(!0===this.Engine.Query(e,t[r],n))return!1;return!0},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},8:e=>{e.exports=function(e){return{Engine:e,OperatorType:"Logical",TopLevel:!0,ValueTypes:"or",Query:function(e,t,n=""){let r=t,o=this.Engine.ShortType(r),i=!1;return"o"===o?i=this.Engine.Query(e,r,n):"r"===o?i=this.Engine.QueryOperators.$regex.Query(e,r,n):this.Engine.Settings.Explain&&this.Engine.Explain.push(`$not: requires an object or regexp but found type [${o}] instead at [${n}].`),!i},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},577:e=>{e.exports=function(e){return{Engine:e,OperatorType:"Logical",TopLevel:!0,ValueTypes:"a",Query:function(e,t,n=""){let r=this.Engine.ShortType(t);if("a"!==r)return this.Engine.Settings.Explain&&this.Engine.Explain.push(`$or: requires an array but found type [${r}] instead at [${n}].`),!1;for(let r=0;r<t.length;r++)if(!0===this.Engine.Query(e,t[r],n))return!0;return!1},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},778:e=>{e.exports=function(e){let t=e;return{Engine:e,OperatorType:"Update",TopLevel:!0,ValueTypes:"o",Update:function(e,n){if("o"!==t.ShortType(n))return t.OpLog&&t.OpLog("$addToSet: The UpdateFields parameter must be an object."),!1;for(let r in n){let o=t.GetValue(e,r);"a"===t.ShortType(o)?o.includes(n[r])||(o.push(n[r]),!1!==t.SetValue(e,r,o)||t.OpLog&&t.OpLog(`$addToSet: Setting the field [${r}] failed.`)):t.OpLog&&t.OpLog(`$addToSet: The field [${r}] must be an array.`)}return!0},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},585:e=>{e.exports=function(e){let t=e;return{Engine:e,OperatorType:"Update",TopLevel:!0,ValueTypes:"o",Update:function(e,n){if("o"!==t.ShortType(n))return t.OpLog&&t.OpLog("$pop: The UpdateFields parameter must be an object."),!1;for(let r in n){let o=t.GetValue(e,r);if("a"!==t.ShortType(o)){t.OpLog&&t.OpLog(`$pop: The field [${r}] must be an array.`);continue}let i=n[r];if(-1===i)o.length&&o.splice(0,1);else{if(1!==i){t.OpLog&&t.OpLog(`$pop: Invalid direction value [${o}] for field [${r}], should be -1 or 1.`);continue}o.length&&o.pop()}!1!==t.SetValue(e,r,o)||t.OpLog&&t.OpLog(`$pop: Setting the field [${r}] failed.`)}return!0},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},164:e=>{e.exports=function(e){let t=e;return{Engine:e,OperatorType:"Update",TopLevel:!0,ValueTypes:"o",Update:function(e,n){if("o"!==t.ShortType(n))return t.OpLog&&t.OpLog("$pullAll: The UpdateFields parameter must be an object."),!1;for(let r in n){let o=t.GetValue(e,r);if("a"!==t.ShortType(o)){t.OpLog&&t.OpLog(`$pullAll: The field [${r}] must be an array.`);continue}let i=n[r];if("a"===t.ShortType(i)){for(let e=o.length-1;e>=0;e--)i.includes(o[e])&&o.splice(e,1);!1!==t.SetValue(e,r,o)||t.OpLog&&t.OpLog(`$pullAll: Setting the field [${r}] failed.`)}else t.OpLog&&t.OpLog("$pullAll: The values to pull must be an array.")}return!0},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},396:e=>{e.exports=function(e){let t=e;return{Engine:e,OperatorType:"Update",TopLevel:!0,ValueTypes:"o",Update:function(e,n){if("o"!==t.ShortType(n))return t.OpLog&&t.OpLog("$push: The UpdateFields parameter must be an object."),!1;for(let r in n){let o=t.GetValue(e,r);if("a"!==t.ShortType(o)){t.OpLog&&t.OpLog(`$push: The field [${r}] must be an array.`);continue}let i=n[r];o.push(i),!1!==t.SetValue(e,r,o)||t.OpLog&&t.OpLog(`$push: Setting the field [${r}] failed.`)}return!0},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},730:e=>{e.exports=function(e){let t=e;return{Engine:e,OperatorType:"Update",TopLevel:!0,ValueTypes:"o",Update:function(e,n){let r=new Date;if("o"!==t.ShortType(n))return t.OpLog&&t.OpLog("$currentDate: The UpdateFields parameter must be an object."),!1;for(let o in n){let i=n[o],u=t.ShortType(i),l=null;if("b"===u)!0===i&&(l=r.toISOString());else{if("o"!==u){t.OpLog&&t.OpLog(`$currentDate: The date dpecification of [${JSON.stringify(i)}] for [${o}] is invalid.`);continue}if("string"==typeof i.$type)if(i=i.$type,"timestamp"===i)l=r.getTime();else{if("date"!==i){t.OpLog&&t.OpLog(`$currentDate: Unknown date dpecification [${i}] for [${o}] is invalid.`);continue}l=r.toDateString()}}null===l||!1!==t.SetValue(e,o,l)||t.OpLog&&t.OpLog(`$currentDate: Setting the value of [${o}] to [${l}] failed.`)}return!0},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},95:e=>{e.exports=function(e){let t=e;return{Engine:e,OperatorType:"Update",TopLevel:!0,ValueTypes:"o",Update:function(e,n){if("o"!==t.ShortType(n))return t.OpLog&&t.OpLog("$inc: The UpdateFields parameter must be an object."),!1;for(let r in n){let o=t.GetValue(e,r),i=t.AsNumber(n[r]);null!==i?(o+=i,!1===t.SetValue(e,r,o)&&t.OpLog&&t.OpLog(`$inc: Setting the value of [${r}] to [${o}] failed.`)):t.OpLog&&t.OpLog(`$inc: This operator requires a numeric value but found [${n[r]}] instead at [${r}].`)}return!0},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},178:e=>{e.exports=function(e){let t=e;return{Engine:e,OperatorType:"Update",TopLevel:!0,ValueTypes:"o",Update:function(e,n){if("o"!==t.ShortType(n))return t.OpLog&&t.OpLog("$max: The UpdateFields parameter must be an object."),!1;for(let r in n){let o=t.GetValue(e,r),i=t.AsNumber(n[r]);null!==i?i>o&&!1===t.SetValue(e,r,i)&&t.OpLog&&t.OpLog(`$max: Setting the value of [${r}] to [${o}] failed.`):t.OpLog&&t.OpLog(`$max: This operator requires a numeric value but found [${n[r]}] instead at [${r}].`)}return!0},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},49:e=>{e.exports=function(e){let t=e;return{Engine:e,OperatorType:"Update",TopLevel:!0,ValueTypes:"o",Update:function(e,n){if("o"!==t.ShortType(n))return t.OpLog&&t.OpLog("$min: The UpdateFields parameter must be an object."),!1;for(let r in n){let o=t.GetValue(e,r),i=t.AsNumber(n[r]);null!==i?i<o&&!1===t.SetValue(e,r,i)&&t.OpLog&&t.OpLog(`$min: Setting the value of [${r}] to [${o}] failed.`):t.OpLog&&t.OpLog(`$min: This operator requires a numeric value but found [${n[r]}] instead at [${r}].`)}return!0},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},581:e=>{e.exports=function(e){let t=e;return{Engine:e,OperatorType:"Update",TopLevel:!0,ValueTypes:"o",Update:function(e,n){if("o"!==t.ShortType(n))return t.OpLog&&t.OpLog("$mul: The UpdateFields parameter must be an object."),!1;for(let r in n){let o=t.GetValue(e,r),i=t.AsNumber(n[r]);null!==i?(o*=i,!1===t.SetValue(e,r,o)&&t.OpLog&&t.OpLog(`$mul: Setting the value of [${r}] to [${o}] failed.`)):t.OpLog&&t.OpLog(`$mul: This operator requires a numeric value but found [${n[r]}] instead at [${r}].`)}return!0},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},818:e=>{e.exports=function(e){let t=e;return{Engine:e,OperatorType:"Update",TopLevel:!0,ValueTypes:"o",Update:function(e,n){if("o"!==t.ShortType(n))return t.OpLog&&t.OpLog("$rename: The UpdateFields parameter must be an object."),!1;for(let r in n){let o=n[r],i=t.GetValue(e,r),u=null;u=t.SetValue(e,r,void 0),!1!==u?(u=t.SetValue(e,o,i),!1!==u||t.OpLog&&t.OpLog(`$rename: Setting the value of [${o}] to [${i}] failed.`)):t.OpLog&&t.OpLog(`$rename: Unsetting the value of [${r}] failed.`)}return!0},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},652:e=>{e.exports=function(e){let t=e;return{Engine:e,OperatorType:"Update",TopLevel:!0,ValueTypes:"o",Update:function(e,n){if("o"!==t.ShortType(n))return t.OpLog&&t.OpLog("$set: The UpdateFields parameter must be an object."),!1;for(let r in n){let o=n[r];!1===t.SetValue(e,r,o)&&t.OpLog&&t.OpLog(`$set: Setting the value of [${r}] to [${o}] failed.`)}return!0},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},101:e=>{e.exports=function(e){let t=e;return{Engine:e,OperatorType:"Update",TopLevel:!0,ValueTypes:"o",Update:function(e,n){if("o"!==t.ShortType(n))return t.OpLog&&t.OpLog("$unset: The UpdateFields parameter must be an object."),!1;for(let r in n)!1===t.SetValue(e,r,void 0)&&t.OpLog&&t.OpLog(`$unset: Unsetting the value of [${r}] failed.`);return!0},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},792:e=>{e.exports={Compare:function(e,t,n=!0){if("string"!=typeof e)throw new Error("The parameter [TextA] must be a string.");if("string"!=typeof t)throw new Error("The parameter [TextB] must be a string.");return n||(e=e.toLowerCase(),t=t.toLowerCase()),e.localeCompare(t)},FindBetween:function(e,t,n,r=!0){if("string"!=typeof e)throw new Error("The parameter [Text] must be a string.");if(null==t&&(t=""),"string"!=typeof t)throw new Error("The parameter [StartText] must be a string or null.");if(null==n&&(n=""),"string"!=typeof n)throw new Error("The parameter [EndText] must be a string or null.");let o=e;r||(o=o.toLowerCase(),t=t.toLowerCase(),n=n.toLowerCase());let i=0;if(t.length&&(i=o.indexOf(t)),i<0)return null;let u=o.length;return n.length&&(u=o.indexOf(n,i+t.length)),u<0?null:e.substring(i+t.length,u)},Matches:function(e,t,n=!0){let r=t.replace(/[.+^${}()|[\]\\]/g,"\\$&"),o="";return n||(o+="i"),new RegExp(`^${r.replace(/\*/g,".*").replace(/\?/g,".")}$`,o).test(e)}}},986:(e,t,n)=>{e.exports=function(e={}){void 0===e.OpLog&&(e.OpLog=null),void 0===e.OpError&&(e.OpError=null);let t={};return t.Settings=e,t.QueryOperators={$eq:n(374)(t),$ne:n(490)(t),$gt:n(132)(t),$gte:n(588)(t),$lt:n(207)(t),$lte:n(424)(t),$in:n(38)(t),$nin:n(879)(t),$and:n(209)(t),$or:n(577)(t),$nor:n(809)(t),$not:n(8)(t),$regex:n(940)(t),$elemMatch:n(999)(t),$size:n(950)(t),$all:n(863)(t),$exists:n(611)(t),$type:n(475)(t),$query:n(222)(t),$noop:n(718)(t),$ImplicitEq:n(469)(t),$eqx:n(239)(t),$nex:n(105)(t)},t.UpdateOperators={$set:n(652)(t),$unset:n(101)(t),$rename:n(818)(t),$inc:n(95)(t),$min:n(49)(t),$max:n(178)(t),$mul:n(581)(t),$currentDate:n(730)(t),$addToSet:n(778)(t),$pop:n(585)(t),$push:n(396)(t),$pullAll:n(164)(t)},t.Query=n(250)(t),t.Project=n(896)(t),t.Update=n(609)(t),t.SplitPath=n(415)(t),t.JoinPaths=n(345)(t),t.GetValue=n(231)(t),t.SetValue=n(931)(t),t.Flatten=n(87)(t),t.Expand=n(903)(t),t.ShortType=n(20)(t),t.BsonType=n(255)(t),t.OpLog=e.OpLog,t.OpError=e.OpError,t.AsNumber=function(e){try{if(!e)return null;let t=Number(e);return isNaN(t)?null:t}catch(e){return null}},t.AsDate=function(e){try{if(!e)return null;let t=new Date(e);return isNaN(t)?null:t}catch(e){return null}},t.Clone=function(e){return JSON.parse(JSON.stringify(e))},t.SafeClone=function(e,n){if("lu".includes(t.ShortType(n))&&(n=[]),!Array.isArray(n))throw new Error("The Exceptions parameter must be an array of field names in dot notation.");return function e(r,o){let i=t.ShortType(r);switch(i){case"b":case"n":case"s":case"l":case"r":case"e":case"f":case"y":case"u":return r;case"o":{let t={};for(let i in r){let u=o;u?u+="."+i:u=i,n.includes(u)?t[i]=r[i]:t[i]=e(r[i],u)}return t}case"a":{let t=[];for(let i=0;i<r.length;i++){let u=o;u?u+="."+i:u=""+i,n.includes(u)?t.push(r[i]):t.push(e(r[i],u))}return t}default:throw new Error(`Unrecognized short type [${i}] at [${o}].`)}}(e,"")},t.PathTerminals=function(e,n,r){let o=t.SplitPath(n);if(null===o)return t.OpLog&&t.OpLog("PathTerminals: Invalid Path."),!1;if(0===o.length)return t.OpLog&&t.OpLog("PathTerminals: Path must be non-empty."),!1;let i=function e(n,o,i){if(void 0===n)return!1;if(null===i)return!1;let u=n,l=t.ShortType(u),p=[...i];if("a"===l){if(p.length&&"number"==typeof p[0]){let n=p[0];p.splice(0,1);let r=t.JoinPaths(o,n);if(!e(u[n],r,p))return!1}else for(let n=0;n<u.length;n++)if(!e(u[n],t.JoinPaths(o,n),p))return!1}else if("o"===l){let n=p[0];p.splice(0,1);let i=u[n],l=t.ShortType(i),a=t.JoinPaths(o,n);if(0===p.length)if("a"===l){if(!e(i,a,p))return!1}else r(i,l,a);else if(!e(i,a,p))return!1}else{if(0!==p.length)return t.OpLog&&t.OpLog(`PathTerminals: Unresolved path elements exist: [${p.join(".")}].`),!1;r(u,l,o)}return!0}(e,"",o);return i},t.IsQuery=function(e){if("o"!==t.ShortType(e))return!1;for(let n in e)if(void 0!==t.QueryOperators[n])return!0;return!1},t.LooseEquals=function(e,n){return t.QueryOperators.$eqx.Query(e,n)},t.StrictEquals=function(e,n){return t.QueryOperators.$eq.Query(e,n)},t}},255:e=>{e.exports=function(e){return function(e,t=!1){let n=this.ShortType(e);if("b"===n)return t?"bool":8;if("n"===n)return e.toString().includes(".")?t?"double":1:Number.isSafeInteger(e)?t?"int":16:t?"long":18;if("s"===n)return t?"string":2;if("l"===n)return t?"null":10;if("o"===n)return t?"object":3;if("a"===n)return t?"array":4;if("r"===n)return t?"regex":11;if("f"===n);else{if("y"===n)return t?"symbol":14;if("u"===n)return t?"undefined":6}return null}}},903:e=>{e.exports=function(e){return function(t){if("o"!==e.ShortType(t))throw new Error("Document must be an object.");let n={};for(let r in t)e.SetValue(n,r,t[r]);return n}}},87:e=>{e.exports=function(e){return function(t){let n={};return function t(r,o){let i=e.ShortType(r);if("o"===i)for(let e in r){let n=o;n?n+="."+e:n=e,t(r[e],n)}else if("a"===i)for(let e=0;e<r.length;e++){let n=o;n?n+="."+e:n=""+e,t(r[e],n)}else n[o]=r}(t,""),n}}},231:e=>{e.exports=function(e){return function(t,n){if(void 0===n)return t;if(null===n)return t;if("string"!=typeof n)return void(e.OpLog&&e.OpLog(`GetValue: Path is invalid [${n}].`));if(0===n.length)return t;let r=e.SplitPath(n);if(null===r)return void(e.OpLog&&e.OpLog("GetValue: SplitPath returned null."));let o=t;for(let t=0;t<r.length;t++){let i=r[t];if(void 0===o[i]){if("number"==typeof i)return void(e.OpLog&&e.OpLog(`GetValue: Array index [${i}] is out of bounds at [${n}].`));if("a"!==e.ShortType(o))return;if(0===o.length)return;let u=[],l=r.slice(t).join(".");if(!1===e.PathTerminals(o,l,(function(e,t,n){u.push(e)})))return;return u}o=o[i]}return o}}},345:e=>{e.exports=function(e){return function(){let t=[];for(let n=0;n<arguments.length;n++){if(null===arguments[n])continue;let r=""+arguments[n],o=e.SplitPath(r);null!==o&&t.push(...o)}return t.join(".")}}},896:e=>{e.exports=function(e){return function(t,n){if(e.Settings.ClearExplainOnTopLevelQuery&&(e.Explain=[]),"o"!==e.ShortType(t))return e.OpLog&&e.OpLog("Projection: The Document parameter must be an object."),null;t=e.Clone(t);let r=e.ShortType(n);if(!0==="lu".includes(r))return t;if("o"!==r)return e.OpLog&&e.OpLog("Projection: The Projection parameter must be an object."),null;n=e.Clone(n);let o="",i=!0;for(let t in n){let r=n[t];if("_id"===t)0===r&&(i=!1),delete n[t];else if(1===r){if("exclude"===o)return e.OpLog&&e.OpLog("Update: Cannot combine inclusion and exclusion operators in the same update."),null;o="include"}else if(0===r){if("include"===o)return e.OpLog&&e.OpLog("Update: Cannot combine inclusion and exclusion operators in the same update."),null;o="exclude"}}""===o&&(o=i?"include":"exclude");let u=null;if("exclude"===o){u=e.Clone(t);for(let t in n)!1!==e.SetValue(u,t,void 0)||e.OpLog&&e.OpLog(`Projection: Failed to unset the field [${field}] in the projection.`)}else if("include"===o){u={_id:t._id};for(let r in n){let n=e.GetValue(t,r);!1!==e.SetValue(u,r,n)||e.OpLog&&e.OpLog(`Projection: Failed to set the field [${field}] in the projection.`)}}return!1===i&&delete u._id,u}}},250:e=>{e.exports=function(e){return function(t,n,r=""){if(""===r&&e.Settings.ClearExplainOnTopLevelQuery&&(e.Explain=[]),"o"!==e.ShortType(t))return e.OpLog&&e.OpLog("Query: The Document parameter must be an object."),!1;if("o"!==e.ShortType(n))return e.OpLog&&e.OpLog("Query: The Query parameter must be an object."),!1;{let t=e.SplitPath(r);r=null===t?"":t.join(".")}if(""===r&&0===Object.keys(n).length)return e.OpLog&&e.OpLog("Query: An empty query object {} matches everything."),!0;for(let o in n)if(void 0!==e.QueryOperators[o]){if(""===r&&!e.QueryOperators[o].TopLevel)return e.OpLog&&e.OpLog(`Query: Operator [${o}] cannot appear at the top level of a query. Only logical operators can appear at the top level of a query.`),!1;let i=n[o];if(void 0===i)return e.OpLog&&e.OpLog(`Query: Operator [${o}] cannot be set to undefined. Use $exists to chrck for a field in the document.`),!1;if(!1===e.QueryOperators[o].Query(t,i,r))return e.OpLog&&e.OpLog(`Query: Operator [${o}] returned false at [${r}].`),!1}else{let i=n[o],u=e.JoinPaths(r,o),l=!1;if(e.IsQuery(i))l=e.Query(t,i,u);else{if(void 0===i)return e.OpLog&&e.OpLog("Query: The implicit $eq operator cannot be set to undefined. Use $exists to chrck for a field in the document."),!1;l=e.QueryOperators.$ImplicitEq.Query(t,i,u)}if(!1===l)return!1}return!0}}},931:e=>{e.exports=function(e){return function(t,n,r){let o=e.ShortType(t);if(!"oa".includes(o))return e.OpLog&&e.OpLog("SetValue: Document must be an object or array."),!1;let i=e.SplitPath(n);if(null===i)return e.OpLog&&e.OpLog("SetValue: Invalid Path."),!1;if(0===i.length)return e.OpLog&&e.OpLog("SetValue: Cannot set a value using an empty path."),!1;let u=t,l="";for(let t=0;t<i.length;t++){let n=i[t];l.length>0&&(l+="."),l+=n;let o=e.ShortType(u);if("o"===o){if("number"==typeof n)return e.OpLog&&e.OpLog(`SetValue: Type mismatch at [${l}]. Expected a field name but found an array index instead.`),!1;if(void 0===u[n]&&(u[n]={},t<i.length-1)){let r=i[t+1],o=e.ShortType(r);if("s"===o)u[n]={};else{if("n"!==o)return e.OpLog&&e.OpLog(`SetValue: Unsupported element type [${o}] in path at [${l}]. Expected a field name or an array index.`),!1;u[n]=[]}}if(t===i.length-1)return void 0===r?delete u[n]:u[n]=JSON.parse(JSON.stringify(r)),!0}else if("a"===o){if("string"==typeof n)return e.OpLog&&e.OpLog(`SetValue: Type mismatch at [${l}]. Expected a array index but found a field name instead.`),!1;for(;u.length<n;)u.push(null);if(t===i.length-1)return void 0===r?u.splice(n,1):u[n]=JSON.parse(JSON.stringify(r)),!0}u=u[n]}return!0}}},20:e=>{e.exports=function(e){return function(e){let t=typeof e;if("boolean"===t)return"b";if("number"===t)return"n";if("string"===t)return"s";if("object"===t)return null===e?"l":Array.isArray(e)?"a":e instanceof RegExp?"r":e instanceof Error?"e":"o";if("function"===t)return"f";if("symbol"===t)return"y";if("undefined"===t)return"u";throw new Error(`Unsupported data type [${t}].`)}}},415:(e,t,n)=>{const r=n(792);e.exports=function(e){return function(t){if(void 0===t)return[];if(null===t)return[];if(""===t)return[];if("string"!=typeof t)return e.OpLog&&e.OpLog(`SplitPath: Path is invalid [${t}].`),null;let n=t.split("."),o=0;for(;o<n.length;){let i=n[o];if(""===i)return e.OpLog&&e.OpLog(`SplitPath: Path cannot contain empty elements in [${t}].`),null;r.FindBetween(i,"[","]"),isNaN(Number(i))||(n[o]=Number(i)),o++}return n}}},609:e=>{e.exports=function(e){return function(t,n){if(e.Settings.ClearExplainOnTopLevelQuery&&(e.Explain=[]),"o"!==e.ShortType(t))return e.OpLog&&e.OpLog("Update: The Document parameter must be an object."),null;t=e.Clone(t);let r=e.ShortType(n);if(!0==="lu".includes(r))return t;if("o"!==r)return e.OpLog&&e.OpLog("Update: The Update parameter must be an object."),null;for(let r in n)void 0!==e.UpdateOperators[r]?!1===e.UpdateOperators[r].Update(t,n[r])&&e.OpLog&&e.OpLog(`Update: The update operator [${r}] failed.`):e.OpLog&&e.OpLog(`Update: Unknown update operator [${r}] encountered.`);return t}}}},t={};return function n(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={exports:{}};return e[r](i,i.exports,n),i.exports}(986)})()));