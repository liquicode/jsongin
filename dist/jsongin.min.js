!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.jsongin=t():e.jsongin=t()}("undefined"!=typeof self?self:this,(()=>(()=>{"use strict";var e={863:e=>{e.exports=function(e){return{Engine:e,OperatorType:"Array",TopLevel:!1,ValueTypes:"o",Query:function(t,n,r=""){let o=this.Engine.GetValue(t,r),i=this.Engine.ShortType(o);if("a"!==i&&(o=[o]),"a"!==i)return e.OpLog&&e.OpLog(`$all: document requires an array but found type [${i}] instead at [${r}].`),!1;let u=this.Engine.ShortType(n);if("a"!==u)return e.OpLog&&e.OpLog(`$all: match requires an array but found type [${u}] instead at [${r}].`),!1;for(let i=0;i<n.length;i++){let l=!1,p=this.Engine.ShortType(n[i]);if("bnsl".includes(p)?l=o.includes(n[i]):"o"===p?l=this.Engine.Query(t,n[i],r):e.OpLog&&e.OpLog(`$all: sub-match requires "bnslo" but found type [${u}] instead at [${r}].`),!1===l)return!1}return!0},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},999:e=>{e.exports=function(e){return{Engine:e,OperatorType:"Array",TopLevel:!1,ValueTypes:"o",Query:function(t,n,r=""){let o=this.Engine.GetValue(t,r),i=this.Engine.ShortType(o);if("a"!==i)return e.OpLog&&e.OpLog(`$elemMatch: document requires an array but found type [${i}] instead at [${r}].`),!1;let u=this.Engine.ShortType(n);if("o"!==u)return e.OpLog&&e.OpLog(`$elemMatch: match requires an object but found type [${u}] instead at [${r}].`),!1;for(let e=0;e<o.length;e++){let o=this.Engine.JoinPaths(r,e);if(!0===this.Engine.Query(t,n,o))return!0}return!1},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},950:e=>{e.exports=function(e){return{Engine:e,OperatorType:"Array",TopLevel:!1,ValueTypes:"n",Query:function(t,n,r=""){let o=this.Engine.GetValue(t,r),i=this.Engine.ShortType(o);if("a"!==i)return e.OpLog&&e.OpLog(`$size: requires an array but found type [${i}] instead at [${r}].`),!1;let u=this.Engine.ShortType(n);return"n"!==u?(e.OpLog&&e.OpLog(`$size: requires a number but found type [${u}] instead at [${r}].`),!1):o.length===n},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},374:e=>{e.exports=function(e){return{Engine:e,OperatorType:"Comparison",TopLevel:!1,ValueTypes:"bnsloaru",Query:function(t,n,r=""){let o=this.Engine.GetValue(t,r),i=this.Engine.ShortType(o),u=n,l=this.Engine.ShortType(u);if("bnslru".includes(l)&&l===i)return o===u;if("lu".includes(l)&&"lu".includes(i))return!0;if("o"===l&&"o"===i)return!0==(JSON.stringify(u)===JSON.stringify(o));if("a"===l&&"a"===i){let e=JSON.stringify(u),t=e===JSON.stringify(o);if(!0===t)return!0;for(let n=0;n<o.length&&(t=e===JSON.stringify(o[n]),!0!==t);n++);return!0===t}return e.OpLog&&e.OpLog(`$eq: cannot compare [${l}] type with [${i}] type at [${r}].`),!1},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},132:e=>{e.exports=function(e){return{Engine:e,OperatorType:"Comparison",TopLevel:!1,ValueTypes:"bns",Query:function(t,n,r=""){let o=this.Engine.GetValue(t,r),i=this.Engine.ShortType(o),u=n,l=this.Engine.ShortType(u);if("bns".includes(l)&&l===i)return o>u;if("a".includes(i)){let e=!1;for(let t=0;t<o.length;t++)if(e=o[t]>u,!0===e)return!0;return!1}return e.OpLog&&e.OpLog(`$gt: cannot compare [${l}] type with [${i}] type at [${r}].`),!1},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},588:e=>{e.exports=function(e){return{Engine:e,OperatorType:"Comparison",TopLevel:!1,ValueTypes:"bnslu",Query:function(t,n,r=""){let o=this.Engine.GetValue(t,r),i=this.Engine.ShortType(o),u=n,l=this.Engine.ShortType(u);if("bns".includes(l)&&l===i)return o>=u;if("lu".includes(l)&&"lu".includes(i))return!0;if("a".includes(i)){let e=!1;for(let t=0;t<o.length;t++)if(e=o[t]>=u,!0===e)return!0;return!1}return e.OpLog&&e.OpLog(`$gte: cannot compare [${l}] type with [${i}] type at [${r}].`),!1},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},38:e=>{e.exports=function(e){return{Engine:e,OperatorType:"Comparison",TopLevel:!1,ValueTypes:"a",Query:function(t,n,r=""){let o=this.Engine.GetValue(t,r),i=this.Engine.ShortType(o),u=n,l=this.Engine.ShortType(u);if("a"!==l)return e.OpLog&&e.OpLog(`$in: expected an array but found a type [${l}] instead at [${r}].`),!1;function p(e,t,n){if("r"===e.ShortType(n)){for(let e=0;e<t.length;e++)if(n.test(t[e]))return!0}else if(t.includes(n))return!0;return!1}if("a"===i){for(let e=0;e<u.length;e++)if(p(this.Engine,o,u[e]))return!0}else if("bnslou".includes(i)&&p(this.Engine,u,o))return!0;return e.OpLog&&e.OpLog(`$in: cannot compare [${l}] type with [${i}] type at [${r}].`),!1},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},207:e=>{e.exports=function(e){return{Engine:e,OperatorType:"Comparison",TopLevel:!1,ValueTypes:"bns",Query:function(t,n,r=""){let o=this.Engine.GetValue(t,r),i=this.Engine.ShortType(o),u=n,l=this.Engine.ShortType(u);if("bns".includes(l)&&l===i)return o<u;if("a".includes(i)){let e=!1;for(let t=0;t<o.length;t++)if(e=o[t]<u,!0===e)return!0;return!1}return e.OpLog&&e.OpLog(`$lt: cannot compare [${l}] type with [${i}] type at [${r}].`),!1},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},424:e=>{e.exports=function(e){return{Engine:e,OperatorType:"Comparison",TopLevel:!1,ValueTypes:"bnslu",Query:function(t,n,r=""){let o=e.GetValue(t,r),i=e.ShortType(o),u=n,l=e.ShortType(u);if("bns".includes(l)&&l===i)return o<=u;if("lu".includes(l)&&"lu".includes(i))return!0;if("a".includes(i)){let e=!1;for(let t=0;t<o.length;t++)if(e=o[t]<=u,!0===e)return!0;return!1}return e.OpLog&&e.OpLog(`$lte: cannot compare [${l}] type with [${i}] type at [${r}].`),!1},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},490:e=>{e.exports=function(e){return{Engine:e,OperatorType:"Comparison",TopLevel:!1,ValueTypes:"bnsloau",Query:function(e,t,n=""){return!this.Engine.QueryOperators.$eq.Query(e,t,n)},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},879:e=>{e.exports=function(e){return{Engine:e,OperatorType:"Comparison",TopLevel:!1,ValueTypes:"a",Query:function(e,t,n=""){return!this.Engine.QueryOperators.$in.Query(e,t,n)},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},611:e=>{e.exports=function(e){return{Engine:e,OperatorType:"Meta",TopLevel:!1,ValueTypes:"b",Query:function(t,n,r=""){let o=this.Engine.GetValue(t,r),i=this.Engine.ShortType(o),u=this.Engine.ShortType(n);if("b"!==u)return e.OpLog&&e.OpLog(`$exists: requires a boolean but found type [${u}] instead at [${r}].`),!1;if(!0===n){if("u"!==i)return!0}else if("u"===i)return!0;return!1},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},718:e=>{e.exports=function(e){return{Engine:e,OperatorType:"Meta",TopLevel:!1,ValueTypes:"b",Query:function(t,n,r=""){return e.OpLog&&e.OpLog(`$noop: always returns true at [${r}].`),!0},ToMongoQuery:function(e){},ToSql:function(e){return""}}}},222:e=>{e.exports=function(e){return{Engine:e,OperatorType:"Meta",TopLevel:!1,ValueTypes:"b",Query:function(e,t,n=""){return!0},ToMongoQuery:function(e){},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},475:e=>{e.exports=function(e){return{Engine:e,OperatorType:"Meta",TopLevel:!1,ValueTypes:"nsa",Query:function(t,n,r=""){let o=this.Engine.GetValue(t,r);"a"!==this.Engine.ShortType(o)&&(o=[o]);let i=this.Engine.ShortType(n);"a"!==i&&(n=[n]);for(let t=0;t<n.length;t++){let u=n[t];if(i=this.Engine.ShortType(u),"n"===i){for(let e=0;e<o.length;e++)if(u===this.Engine.BsonType(o[e],!1))return!0}else{if("s"!==i)return e.OpLog&&e.OpLog(`$type: requires a number or string but found type [${i}] instead at [${r}].`),!1;for(let e=0;e<o.length;e++){let t=this.Engine.BsonType(o[e],!0);if(u===t)return!0;if("number"===u&&["int","long","double","decimal"].includes(t))return!0}}}return!1},ToMongoQuery:function(e){},ToSql:function(e){return""}}}},940:e=>{e.exports=function(e){return{Engine:e,OperatorType:"Comparison",TopLevel:!1,ValueTypes:"sr",Query:function(t,n,r=""){let o=this.Engine.GetValue(t,r),i=(this.Engine.ShortType(o),n),u=this.Engine.ShortType(i);return"sr".includes(u)?("s"===u&&(i=new RegExp(i)),i.test(o)):(e.OpLog&&e.OpLog(`$regex: requires regexp or string but found [${u}] instead at [${r}].`),!1)},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},469:e=>{e.exports=function(e){return{Engine:e,OperatorType:"Comparison",TopLevel:!1,ValueTypes:"bnsloaru",Query:function(t,n,r=""){let o=this.Engine.GetValue(t,r),i=this.Engine.ShortType(o),u=n,l=this.Engine.ShortType(u),p=this.Engine.IsQuery(u),a=!1;if("bnslu".includes(i)&&"bnslu".includes(l))return a=this.Engine.QueryOperators.$eq.Query(t,u,r),a;if("bnslu".includes(i)&&"a".includes(l))return e.OpLog&&e.OpLog(`ImplicitEq: cannot compare [${l}] type with [${i}] type at [${r}].`),!1;if("bnslu".includes(i)&&"o".includes(l))return p?(a=this.Engine.Query(t,u,r),a):(e.OpLog&&e.OpLog(`ImplicitEq: requires query when comparing against [${i}] type with [${i}] type at [${r}].`),!1);if("a".includes(i)&&"bnslu".includes(l))return a=o.includes(u),a;if("a".includes(i)&&"o".includes(l)){for(let e=0;e<o.length;e++){let n=this.Engine.JoinPaths(r,e);if(a=p?this.Engine.Query(t,u,n):this.Engine.QueryOperators.$eq.Query(t,u,n),!0===a)return!0}return!1}if("a".includes(i)&&"a".includes(l))return a=this.Engine.QueryOperators.$eq.Query(t,u,r),a;if("a".includes(i)&&"r".includes(l)){for(let e=0;e<o.length;e++){let n=this.Engine.JoinPaths(r,e);if(a=this.Engine.QueryOperators.$regex.Query(t,u,n),!1===a)return!1}return!0}return"o".includes(i)&&"o".includes(l)?p?(a=this.Engine.Query(t,u,r),a):(a=this.Engine.QueryOperators.$eq.Query(t,u,r),a):"s".includes(i)&&"r".includes(l)?(a=this.Engine.QueryOperators.$regex.Query(t,u,r),a):(e.OpLog&&e.OpLog(`ImplicitEq: cannot compare [${l}] type with [${i}] type at [${r}].`),!1)},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},239:e=>{e.exports=e.exports=function(e){return{Engine:e,OperatorType:"Comparison",TopLevel:!1,ValueTypes:"bnsloaru",Query:function(t,n,r=""){let o=this.Engine.GetValue(t,r),i=this.Engine.ShortType(o),u=n,l=this.Engine.ShortType(u);if("bns".includes(l)&&"bns".includes(i))return o==u;if("lu".includes(l)&&"lu".includes(i))return!0;if("bnslu".includes(l)||"bnslu".includes(i))return!1;if("o"===l&&"o"===i){let e=Object.keys(u),t=Object.keys(o);if(e.length!==t.length)return!1;for(let t=0;t<e.length;t++){let n=e[t];if(!1==(u[n]==o[n]))return!1}return!0}if("a"===l&&"a"===i){if(u.length!==o.length)return!1;let e=[...o];for(let t=0;t<u.length;t++){let n=!1;for(let r=0;r<e.length;r++)if(u[t]==e[r]){n=!0,e.splice(r,1);break}if(!1===n)return!1}return!0}return e.OpLog&&e.OpLog(`$eqx: cannot compare [${l}] type with [${value_type}] type at [${r}].`),!1},ToMongoQuery:function(e){throw new Error("ToMongoQuery() is not implemented.")},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},105:e=>{e.exports=function(e){return{Engine:e,OperatorType:"Comparison",TopLevel:!1,ValueTypes:"bnsloau",Query:function(e,t,n=""){return!this.Engine.QueryOperators.$eqx.Query(e,t,n)},ToMongoQuery:function(e){throw new Error("ToMongoQuery() is not implemented.")},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},209:e=>{e.exports=function(e){return{Engine:e,OperatorType:"Logical",TopLevel:!0,ValueTypes:"a",Query:function(t,n,r){let o=this.Engine.ShortType(n);if("a"!==o)return e.OpLog&&e.OpLog(`$and: requires an array but found type [${o}] instead at [${r}].`),!1;for(let e=0;e<n.length;e++)if(!1===this.Engine.Query(t,n[e],r))return!1;return!0},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},809:e=>{e.exports=function(e){return{Engine:e,OperatorType:"Logical",TopLevel:!0,ValueTypes:"a",Query:function(t,n,r=""){let o=this.Engine.ShortType(n);if("a"!==o)return e.OpLog&&e.OpLog(`$nor: requires an array but found type [${o}] instead at [${r}].`),!1;for(let e=0;e<n.length;e++)if(!0===this.Engine.Query(t,n[e],r))return!1;return!0},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},8:e=>{e.exports=function(e){return{Engine:e,OperatorType:"Logical",TopLevel:!0,ValueTypes:"or",Query:function(t,n,r=""){let o=n,i=this.Engine.ShortType(o),u=!1;return"o"===i?u=this.Engine.Query(t,o,r):"r"===i?u=this.Engine.QueryOperators.$regex.Query(t,o,r):e.OpLog&&e.OpLog(`$not: requires an object or regexp but found type [${i}] instead at [${r}].`),!u},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},577:e=>{e.exports=function(e){return{Engine:e,OperatorType:"Logical",TopLevel:!0,ValueTypes:"a",Query:function(t,n,r=""){let o=this.Engine.ShortType(n);if("a"!==o)return e.OpLog&&e.OpLog(`$or: requires an array but found type [${o}] instead at [${r}].`),!1;for(let e=0;e<n.length;e++)if(!0===this.Engine.Query(t,n[e],r))return!0;return!1},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},778:e=>{e.exports=function(e){let t=e;return{Engine:e,OperatorType:"Update",TopLevel:!0,ValueTypes:"o",Update:function(e,n){if("o"!==t.ShortType(n))return t.OpLog&&t.OpLog("$addToSet: The UpdateFields parameter must be an object."),!1;for(let r in n){let o=t.GetValue(e,r);"a"===t.ShortType(o)?o.includes(n[r])||(o.push(n[r]),!1!==t.SetValue(e,r,o)||t.OpLog&&t.OpLog(`$addToSet: Setting the field [${r}] failed.`)):t.OpLog&&t.OpLog(`$addToSet: The field [${r}] must be an array.`)}return!0},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},585:e=>{e.exports=function(e){let t=e;return{Engine:e,OperatorType:"Update",TopLevel:!0,ValueTypes:"o",Update:function(e,n){if("o"!==t.ShortType(n))return t.OpLog&&t.OpLog("$pop: The UpdateFields parameter must be an object."),!1;for(let r in n){let o=t.GetValue(e,r);if("a"!==t.ShortType(o)){t.OpLog&&t.OpLog(`$pop: The field [${r}] must be an array.`);continue}let i=n[r];if(-1===i)o.length&&o.splice(0,1);else{if(1!==i){t.OpLog&&t.OpLog(`$pop: Invalid direction value [${o}] for field [${r}], should be -1 or 1.`);continue}o.length&&o.pop()}!1!==t.SetValue(e,r,o)||t.OpLog&&t.OpLog(`$pop: Setting the field [${r}] failed.`)}return!0},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},164:e=>{e.exports=function(e){let t=e;return{Engine:e,OperatorType:"Update",TopLevel:!0,ValueTypes:"o",Update:function(e,n){if("o"!==t.ShortType(n))return t.OpLog&&t.OpLog("$pullAll: The UpdateFields parameter must be an object."),!1;for(let r in n){let o=t.GetValue(e,r);if("a"!==t.ShortType(o)){t.OpLog&&t.OpLog(`$pullAll: The field [${r}] must be an array.`);continue}let i=n[r];if("a"===t.ShortType(i)){for(let e=o.length-1;e>=0;e--)i.includes(o[e])&&o.splice(e,1);!1!==t.SetValue(e,r,o)||t.OpLog&&t.OpLog(`$pullAll: Setting the field [${r}] failed.`)}else t.OpLog&&t.OpLog("$pullAll: The values to pull must be an array.")}return!0},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},396:e=>{e.exports=function(e){let t=e;return{Engine:e,OperatorType:"Update",TopLevel:!0,ValueTypes:"o",Update:function(e,n){if("o"!==t.ShortType(n))return t.OpLog&&t.OpLog("$push: The UpdateFields parameter must be an object."),!1;for(let r in n){let o=t.GetValue(e,r);if("a"!==t.ShortType(o)){t.OpLog&&t.OpLog(`$push: The field [${r}] must be an array.`);continue}let i=n[r];o.push(i),!1!==t.SetValue(e,r,o)||t.OpLog&&t.OpLog(`$push: Setting the field [${r}] failed.`)}return!0},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},730:e=>{e.exports=function(e){let t=e;return{Engine:e,OperatorType:"Update",TopLevel:!0,ValueTypes:"o",Update:function(e,n){let r=new Date;if("o"!==t.ShortType(n))return t.OpLog&&t.OpLog("$currentDate: The UpdateFields parameter must be an object."),!1;for(let o in n){let i=n[o],u=t.ShortType(i),l=null;if("b"===u)!0===i&&(l=r.toISOString());else{if("o"!==u){t.OpLog&&t.OpLog(`$currentDate: The date dpecification of [${JSON.stringify(i)}] for [${o}] is invalid.`);continue}if("string"==typeof i.$type)if(i=i.$type,"timestamp"===i)l=r.getTime();else{if("date"!==i){t.OpLog&&t.OpLog(`$currentDate: Unknown date dpecification [${i}] for [${o}] is invalid.`);continue}l=r.toDateString()}}null===l||!1!==t.SetValue(e,o,l)||t.OpLog&&t.OpLog(`$currentDate: Setting the value of [${o}] to [${l}] failed.`)}return!0},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},95:e=>{e.exports=function(e){let t=e;return{Engine:e,OperatorType:"Update",TopLevel:!0,ValueTypes:"o",Update:function(e,n){if("o"!==t.ShortType(n))return t.OpLog&&t.OpLog("$inc: The UpdateFields parameter must be an object."),!1;for(let r in n){let o=t.GetValue(e,r),i=t.AsNumber(n[r]);null!==i?(o+=i,!1===t.SetValue(e,r,o)&&t.OpLog&&t.OpLog(`$inc: Setting the value of [${r}] to [${o}] failed.`)):t.OpLog&&t.OpLog(`$inc: This operator requires a numeric value but found [${n[r]}] instead at [${r}].`)}return!0},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},178:e=>{e.exports=function(e){let t=e;return{Engine:e,OperatorType:"Update",TopLevel:!0,ValueTypes:"o",Update:function(e,n){if("o"!==t.ShortType(n))return t.OpLog&&t.OpLog("$max: The UpdateFields parameter must be an object."),!1;for(let r in n){let o=t.GetValue(e,r),i=t.AsNumber(n[r]);null!==i?i>o&&!1===t.SetValue(e,r,i)&&t.OpLog&&t.OpLog(`$max: Setting the value of [${r}] to [${o}] failed.`):t.OpLog&&t.OpLog(`$max: This operator requires a numeric value but found [${n[r]}] instead at [${r}].`)}return!0},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},49:e=>{e.exports=function(e){let t=e;return{Engine:e,OperatorType:"Update",TopLevel:!0,ValueTypes:"o",Update:function(e,n){if("o"!==t.ShortType(n))return t.OpLog&&t.OpLog("$min: The UpdateFields parameter must be an object."),!1;for(let r in n){let o=t.GetValue(e,r),i=t.AsNumber(n[r]);null!==i?i<o&&!1===t.SetValue(e,r,i)&&t.OpLog&&t.OpLog(`$min: Setting the value of [${r}] to [${o}] failed.`):t.OpLog&&t.OpLog(`$min: This operator requires a numeric value but found [${n[r]}] instead at [${r}].`)}return!0},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},581:e=>{e.exports=function(e){let t=e;return{Engine:e,OperatorType:"Update",TopLevel:!0,ValueTypes:"o",Update:function(e,n){if("o"!==t.ShortType(n))return t.OpLog&&t.OpLog("$mul: The UpdateFields parameter must be an object."),!1;for(let r in n){let o=t.GetValue(e,r),i=t.AsNumber(n[r]);null!==i?(o*=i,!1===t.SetValue(e,r,o)&&t.OpLog&&t.OpLog(`$mul: Setting the value of [${r}] to [${o}] failed.`)):t.OpLog&&t.OpLog(`$mul: This operator requires a numeric value but found [${n[r]}] instead at [${r}].`)}return!0},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},818:e=>{e.exports=function(e){let t=e;return{Engine:e,OperatorType:"Update",TopLevel:!0,ValueTypes:"o",Update:function(e,n){if("o"!==t.ShortType(n))return t.OpLog&&t.OpLog("$rename: The UpdateFields parameter must be an object."),!1;for(let r in n){let o=n[r],i=t.GetValue(e,r),u=null;u=t.SetValue(e,r,void 0),!1!==u?(u=t.SetValue(e,o,i),!1!==u||t.OpLog&&t.OpLog(`$rename: Setting the value of [${o}] to [${i}] failed.`)):t.OpLog&&t.OpLog(`$rename: Unsetting the value of [${r}] failed.`)}return!0},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},652:e=>{e.exports=function(e){let t=e;return{Engine:e,OperatorType:"Update",TopLevel:!0,ValueTypes:"o",Update:function(e,n){if("o"!==t.ShortType(n))return t.OpLog&&t.OpLog("$set: The UpdateFields parameter must be an object."),!1;for(let r in n){let o=n[r];!1===t.SetValue(e,r,o)&&t.OpLog&&t.OpLog(`$set: Setting the value of [${r}] to [${o}] failed.`)}return!0},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},101:e=>{e.exports=function(e){let t=e;return{Engine:e,OperatorType:"Update",TopLevel:!0,ValueTypes:"o",Update:function(e,n){if("o"!==t.ShortType(n))return t.OpLog&&t.OpLog("$unset: The UpdateFields parameter must be an object."),!1;for(let r in n)!1===t.SetValue(e,r,void 0)&&t.OpLog&&t.OpLog(`$unset: Unsetting the value of [${r}] failed.`);return!0},ToMongoQuery:function(e){return e},ToSql:function(e){throw new Error("ToSql() is not implemented.")}}}},986:(e,t,n)=>{e.exports=function(e={}){void 0===e.OpLog&&(e.OpLog=null),void 0===e.OpError&&(e.OpError=null);let t={};return t.Settings=e,t.QueryOperators={$eq:n(374)(t),$ne:n(490)(t),$gt:n(132)(t),$gte:n(588)(t),$lt:n(207)(t),$lte:n(424)(t),$in:n(38)(t),$nin:n(879)(t),$and:n(209)(t),$or:n(577)(t),$nor:n(809)(t),$not:n(8)(t),$regex:n(940)(t),$elemMatch:n(999)(t),$size:n(950)(t),$all:n(863)(t),$exists:n(611)(t),$type:n(475)(t),$query:n(222)(t),$noop:n(718)(t),$ImplicitEq:n(469)(t),$eqx:n(239)(t),$nex:n(105)(t)},t.UpdateOperators={$set:n(652)(t),$unset:n(101)(t),$rename:n(818)(t),$inc:n(95)(t),$min:n(49)(t),$max:n(178)(t),$mul:n(581)(t),$currentDate:n(730)(t),$addToSet:n(778)(t),$pop:n(585)(t),$push:n(396)(t),$pullAll:n(164)(t)},t.Query=n(250)(t),t.Project=n(896)(t),t.Update=n(609)(t),t.GetValue=n(231)(t),t.SetValue=n(931)(t),t.Flatten=n(87)(t),t.Expand=n(903)(t),t.SplitPath=n(415)(t),t.JoinPaths=n(345)(t),t.LooseEquals=function(e,n){return t.QueryOperators.$eqx.Query(e,n)},t.StrictEquals=function(e,n){return t.QueryOperators.$eq.Query(e,n)},t.Clone=function(e){return JSON.parse(JSON.stringify(e))},t.SafeClone=n(978)(t),t.ShortType=n(20)(t),t.BsonType=n(255)(t),t.OpLog=e.OpLog,t.OpError=e.OpError,t.AsNumber=function(e){try{if(!e)return null;let t=Number(e);return isNaN(t)?null:t}catch(e){return null}},t.AsDate=function(e){try{if(!e)return null;let t=new Date(e);return isNaN(t)?null:t}catch(e){return null}},t.IsQuery=function(e){if("o"!==t.ShortType(e))return!1;for(let n in e)if(void 0!==t.QueryOperators[n])return!0;return!1},t}},255:e=>{e.exports=function(e){return function(e,t=!1){let n=this.ShortType(e);if("b"===n)return t?"bool":8;if("n"===n)return e.toString().includes(".")?t?"double":1:Number.isSafeInteger(e)?t?"int":16:t?"long":18;if("s"===n)return t?"string":2;if("l"===n)return t?"null":10;if("o"===n)return t?"object":3;if("a"===n)return t?"array":4;if("r"===n)return t?"regex":11;if("f"===n);else{if("y"===n)return t?"symbol":14;if("u"===n)return t?"undefined":6}return null}}},903:e=>{e.exports=function(e){return function(t){try{if("o"!==e.ShortType(t))throw new Error("Document must be an object.");let n={};for(let r in t)e.SetValue(n,r,t[r]);return n}catch(t){throw e.OpError&&e.OpError("Expand: "+t.message),t}}}},87:e=>{e.exports=function(e){return function(t){try{let n={};function r(t,o){let i=e.ShortType(t);if("o"===i)for(let e in t){let n=o;n?n+="."+e:n=e,r(t[e],n)}else if("a"===i)for(let e=0;e<t.length;e++){let n=o;n?n+="."+e:n=""+e,r(t[e],n)}else n[o]=t}if(!"oa".includes(e.ShortType(t)))throw new Error("Document must be an object or array.");return r(t,""),n}catch(o){throw e.OpError&&e.OpError("Flatten: "+o.message),o}}}},231:(e,t,n)=>{n(986),e.exports=function(e){return function t(n,r){try{switch(e.ShortType(r)){case"u":case"l":return n;case"n":case"s":break;default:throw new Error(`Path is invalid [${JSON.stringify(r)}].`)}if(0===r.length)return n;let o=e.SplitPath(r),i=n;for(let n=0;n<o.length;n++){let r=o[n],u=e.ShortType(r),l=e.ShortType(i);if("a"===l){if("n"===u){if(r<0&&(r=i.length+r),r<0)return;if(r>=i.length)return;i=i[r];continue}{let e=[],r=o.slice(n).join(".");for(let n=0;n<i.length;n++){let o=t(i[n],r);e.push(o)}return e}}if("o"!==l)return;i=i[r]}return i}catch(t){throw e.OpError&&e.OpError("GetValue: "+t.message),t}}}},345:e=>{e.exports=function(e){return function(){try{let t=[];for(let n=0;n<arguments.length;n++){let r=arguments[n];switch(e.ShortType(r)){case"u":case"l":continue;case"n":r=[""+r];break;case"s":case"a":break;default:throw new Error(`Path segment is invalid [${JSON.stringify(r)}].`)}"string"==typeof r&&(r=e.SplitPath(r));let o=[];for(let t=0;t<r.length;t++){let n=e.SplitPath(r[t]);o.push(...n)}t.push(...o)}return t.join(".")}catch(t){throw e.OpError&&e.OpError("JoinPaths: "+t.message),t}}}},896:e=>{e.exports=function(e){return function(t,n){if("o"!==e.ShortType(t))return e.OpLog&&e.OpLog("Projection: The Document parameter must be an object."),null;t=e.Clone(t);let r=e.ShortType(n);if(!0==="lu".includes(r))return t;if("o"!==r)return e.OpLog&&e.OpLog("Projection: The Projection parameter must be an object."),null;n=e.Clone(n);let o="",i=!0;for(let t in n){let r=n[t];if("_id"===t)0===r&&(i=!1),delete n[t];else if(1===r){if("exclude"===o)return e.OpLog&&e.OpLog("Update: Cannot combine inclusion and exclusion operators in the same update."),null;o="include"}else if(0===r){if("include"===o)return e.OpLog&&e.OpLog("Update: Cannot combine inclusion and exclusion operators in the same update."),null;o="exclude"}}""===o&&(o=i?"include":"exclude");let u=null;if("exclude"===o){u=e.Clone(t);for(let t in n)!1!==e.SetValue(u,t,void 0)||e.OpLog&&e.OpLog(`Projection: Failed to unset the field [${field}] in the projection.`)}else if("include"===o){u={_id:t._id};for(let r in n){let n=e.GetValue(t,r);!1!==e.SetValue(u,r,n)||e.OpLog&&e.OpLog(`Projection: Failed to set the field [${field}] in the projection.`)}}return!1===i&&delete u._id,u}}},250:e=>{e.exports=function(e){return function(t,n,r=""){if("o"!==e.ShortType(t))return e.OpLog&&e.OpLog("Query: The Document parameter must be an object."),!1;if("o"!==e.ShortType(n))return e.OpLog&&e.OpLog("Query: The Criteria parameter must be an object."),!1;{let t=e.SplitPath(r);r=null===t?"":t.join(".")}if(""===r&&0===Object.keys(n).length)return e.OpLog&&e.OpLog("Query: An empty query object {} matches everything."),!0;for(let o in n)if(void 0!==e.QueryOperators[o]){if(""===r&&!e.QueryOperators[o].TopLevel)return e.OpLog&&e.OpLog(`Query: Operator [${o}] cannot appear at the top level of a query. Only logical operators can appear at the top level of a query.`),!1;let i=n[o];if(void 0===i)return e.OpLog&&e.OpLog(`Query: Operator [${o}] cannot be set to undefined. Use $exists to test if a field exists in the document.`),!1;if(!1===e.QueryOperators[o].Query(t,i,r))return e.OpLog&&e.OpLog(`Query: Operator [${o}] returned false at [${r}].`),!1}else{let i=n[o],u=e.JoinPaths(r,o),l=!1;if(e.IsQuery(i))l=e.Query(t,i,u);else{if(void 0===i)return e.OpLog&&e.OpLog("Query: The implicit $eq operator cannot be set to undefined. Use $exists to test if a field exists in the document."),!1;l=e.QueryOperators.$ImplicitEq.Query(t,i,u)}if(!1===l)return!1}return!0}}},978:e=>{e.exports=function(e){return function(t,n){try{switch(e.ShortType(n)){case"l":case"u":n=[];break;case"s":n=[n];break;case"a":break;default:throw new Error("The Exceptions parameter must be a document path or array of paths in dot notation.")}function r(t,o){let i=e.ShortType(t);switch(i){case"b":case"n":case"s":case"l":case"r":case"e":case"f":case"y":case"u":return t;case"o":{let e={};for(let i in t){let u=o;u?u+="."+i:u=i,n.includes(u)?e[i]=t[i]:e[i]=r(t[i],u)}return e}case"a":{let e=[];for(let i=0;i<t.length;i++){let u=o;u?u+="."+i:u=""+i,n.includes(u)?e.push(t[i]):e.push(r(t[i],u))}return e}default:throw new Error(`Unrecognized short type [${i}] at [${o}].`)}}return r(t,"")}catch(o){throw e.OpError&&e.OpError("SafeClone: "+o.message),o}}}},931:e=>{e.exports=function(e){return function t(n,r,o){try{switch(e.ShortType(n)){case"o":case"a":break;default:throw new Error("Document must be an object or array.")}switch(e.ShortType(r)){case"u":case"l":r="";break;case"n":case"s":break;default:throw new Error(`Path is invalid [${JSON.stringify(r)}].`)}if(0===r.length)return e.OpLog&&e.OpLog("SetValue: Path is empty."),!1;let i=e.SplitPath(r),u=n;for(let n=0;n<i.length;n++){let l=i[n],p=e.ShortType(l),a=e.ShortType(u);if("a"===a){if("n"===p){if(l<0&&(l=u.length+l),l<0)return e.OpLog&&e.OpLog(`SetValue: Disallowed negative array index [${l}] in path [${r}].`),!1;if(n===i.length-1)return u[l]=o,!0;if(void 0===u[l]){let t=e.ShortType(i[n+1]);u[l]="n"===t?[]:{}}u=u[l];continue}{let e=i.slice(n).join(".");for(let n=0;n<u.length;n++)if(!1===t(u[n],e,o))return!1;return!0}}if("o"!==a)throw new Error(`The element [${l}] of the path [${r}] must reference an object or array.`);if(n===i.length-1)return u[l]=o,!0;if(void 0!==u[l])u=u[l];else{let t=e.ShortType(i[n+1]);u[l]="n"===t?[]:{},u=u[l]}}return!0}catch(t){throw e.OpError&&e.OpError("SetValue: "+t.message),t}}}},20:e=>{e.exports=function(e){return function(e){let t=typeof e;if("boolean"===t)return"b";if("number"===t)return"n";if("string"===t)return"s";if("object"===t)return null===e?"l":Array.isArray(e)?"a":e instanceof RegExp?"r":e instanceof Error?"e":"o";if("function"===t)return"f";if("symbol"===t)return"y";if("undefined"===t)return"u";throw new Error(`Unsupported data type [${t}].`)}}},415:e=>{e.exports=function(e){return function(t){try{switch(e.ShortType(t)){case"u":case"l":return[];case"n":t=""+t;break;case"s":break;default:throw new Error(`Path is invalid [${JSON.stringify(t)}].`)}if(0===t.length)return[];let n=t.split(".");for(let t=0;t<n.length;t++){let r=n[t];null!==e.AsNumber(r)&&(r=Number(r)),n[t]=r}return n}catch(t){throw e.OpError&&e.OpError("SplitPath: "+t.message),t}}}},609:e=>{e.exports=function(e){return function(t,n){if("o"!==e.ShortType(t))return e.OpLog&&e.OpLog("Update: The Document parameter must be an object."),null;t=e.Clone(t);let r=e.ShortType(n);if(!0==="lu".includes(r))return t;if("o"!==r)return e.OpLog&&e.OpLog("Update: The Update parameter must be an object."),null;for(let r in n)void 0!==e.UpdateOperators[r]?!1===e.UpdateOperators[r].Update(t,n[r])&&e.OpLog&&e.OpLog(`Update: The update operator [${r}] failed.`):e.OpLog&&e.OpLog(`Update: Unknown update operator [${r}] encountered.`);return t}}}},t={};return function n(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={exports:{}};return e[r](i,i.exports,n),i.exports}(986)})()));